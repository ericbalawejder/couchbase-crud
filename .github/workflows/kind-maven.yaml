# read up on using workflow dispatch - it allows you to run actions manually
# https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/

# read up on using helm to deploy operator and the cluster - it's easy mode
# https://docs.couchbase.com/operator/current/helm-setup-guide.html

# friendly charts can be found here
# https://github.com/couchbase-partners/helm-charts

# read up on KIND (Kubernetes in Docker)
# https://kind.sigs.k8s.io/docs/user/quick-start/

# this will spin up a KIND K8S cluster, install the operator, admission, and 1 x Couchbase Cluster node based on the values passsed in the operator-values.yaml file found in the deployment directory

name: "Create cluster using KinD"
on:
  workflow_dispatch

jobs:
  kind:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: engineerd/setup-kind@v0.5.0
      - name: Install Helm
        uses: azure/setup-helm@v1
      - name: Install the operator
        run: |
          helm repo add couchbase https://couchbase-partners.github.io/helm-charts/
          helm repo update
          helm install default --values deployment/operator-values.yaml couchbase/couchbase-operator
      - name: wait for cluster to come up
        run: |
          sleep 180
      - name: set IPAddress and IpPort
        run: |
          echo "envIpAddress=$(kubectl get nodes -o jsonpath='{.items[*].status.addresses[?(@.type=="InternalIP")].address}')" >> $GITHUB_ENV
          echo "envIpPort=$(kubectl get svc default-couchbase-cluster-ui -o jsonpath='{.spec.ports[].nodePort}')" >> $GITHUB_ENV
      - name:  combine to full connection string
        run: |
          echo "connectionString=$(echo "http://${envIpAddress}:${envIpPort}?network=external" | sed -e 's/[]$.*[\^]/\\&/g' )" | xargs >> $GITHUB_ENV
      - name: fix connection string
        run: |
          echo "${{ env.connectionString }}"
          sed -i'' -e "s|localhost|${{ env.connectionString }}|" src/main/resources/application.properties
          cat src/main/resources/application.properties
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests with Maven
        run: mvn -B test --file pom.xml
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: 'failure,warnings'
          notification_title: '{workflow} on *{repo}*'
          message_format: '{emoji}    *{status_message}* in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>'
          footer: '<{run_url}|View Full Run on GitHub>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

